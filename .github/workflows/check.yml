name: Checks

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  NIGHTLY_VERSION: 'nightly-2025-10-10'
  EXTRA_ARGS: ''

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Ubuntu dependencies
        shell: bash
        run: sudo apt update && sudo apt install -y protobuf-compiler

      - name: Use minimal stable (w/ `wasm32-unknown-unknown`)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          components: rust-src

      - name: Use minimal `${{ env.NIGHTLY_VERSION }}` (w/ `wasm32-unknown-unknown`)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.NIGHTLY_VERSION }}
          target: wasm32-unknown-unknown
          components: rust-src

      - uses: actions/checkout@v4

      - name: Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true
          key: check

      - name: Check Build
        uses: actions-rs/cargo@v1
        with:
          command: check
          toolchain: ${{ env.NIGHTLY_VERSION }}
          args: --release --locked --all-features --workspace ${{ env.EXTRA_ARGS }}

  clippy:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    env:
      SKIP_WASM_BUILD: 1
    steps:
      - name: Setup Ubuntu dependencies
        shell: bash
        run: sudo apt update && sudo apt install -y protobuf-compiler

      - name: Use minimal stable (w/ `wasm32-unknown-unknown`)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          components: rust-src

      - name: Use minimal `${{ env.NIGHTLY_VERSION }}` (w/ `wasm32-unknown-unknown`)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.NIGHTLY_VERSION }}
          target: wasm32-unknown-unknown
          components: rust-src, clippy

      - uses: actions/checkout@v4

      - name: Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true
          key: check

      - name: Annotate with Clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          toolchain: ${{ env.NIGHTLY_VERSION }}
          args: --release --locked --all-features --workspace ${{ env.EXTRA_ARGS }}

  test:
    runs-on: ubuntu-latest
    env:
      SKIP_WASM_BUILD: 1
    steps:
      - name: Setup Ubuntu dependencies
        shell: bash
        run: sudo apt update && sudo apt install -y protobuf-compiler

      - name: Use minimal stable (w/ `wasm32-unknown-unknown`)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          components: rust-src

      - name: Use minimal `${{ env.NIGHTLY_VERSION }}` (w/ `wasm32-unknown-unknown`)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.NIGHTLY_VERSION }}
          target: wasm32-unknown-unknown
          components: rust-src

      - uses: actions/checkout@v4

      - name: Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          cache-all-crates: true
          key: test

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          toolchain: ${{ env.NIGHTLY_VERSION }}
          args: --lib --locked --all-features --workspace ${{ env.EXTRA_ARGS }}
